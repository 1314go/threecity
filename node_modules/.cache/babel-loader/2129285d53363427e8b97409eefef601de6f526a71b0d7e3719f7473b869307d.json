{"ast":null,"code":"import { onMounted, ref } from 'vue';\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport gsap from \"gsap\";\nimport * as dat from \"dat.gui\";\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader.js\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\n//场景元素div\n\nexport default {\n  __name: 'Scene',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let sceneDiv = ref(null);\n\n    //创建gui对象\n    const gui = new dat.GUI();\n\n    // console.log(THREE);\n    // 初始化场景\n    const scene = new THREE.Scene();\n\n    // 创建透视相机\n    const camera = new THREE.PerspectiveCamera(75, window.innerHeight / window.innerHeight, 1, 50);\n    // 设置相机位置\n    // object3d具有position，属性是1个3维的向量\n    camera.position.set(0, 0, 10);\n    scene.add(camera);\n\n    // 加入辅助轴，帮助我们查看3维坐标轴\n    const axesHelper = new THREE.AxesHelper(5);\n    scene.add(axesHelper);\n    const plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(20, 20), new THREE.MeshStandardMaterial());\n    plane.position.set(0, 0, -6);\n    plane.receiveShadow = true;\n    scene.add(plane);\n\n    // 初始化渲染器\n    const renderer = new THREE.WebGLRenderer();\n    // 设置渲染尺寸大小\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n\n    // 监听屏幕大小改变的变化，设置渲染的尺寸\n    window.addEventListener(\"resize\", () => {\n      //   console.log(\"resize\");\n      // 更新摄像头\n      camera.aspect = window.innerWidth / window.innerHeight;\n      //   更新摄像机的投影矩阵\n      camera.updateProjectionMatrix();\n\n      //   更新渲染器\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      //   设置渲染器的像素比例\n      renderer.setPixelRatio(window.devicePixelRatio);\n    });\n    onMounted(() => {\n      sceneDiv.value.appendChild(renderer.domElement);\n    });\n    const __returned__ = {\n      get sceneDiv() {\n        return sceneDiv;\n      },\n      set sceneDiv(v) {\n        sceneDiv = v;\n      },\n      gui,\n      scene,\n      camera,\n      axesHelper,\n      plane,\n      renderer,\n      onMounted,\n      ref,\n      get THREE() {\n        return THREE;\n      },\n      get OrbitControls() {\n        return OrbitControls;\n      },\n      get gsap() {\n        return gsap;\n      },\n      get dat() {\n        return dat;\n      },\n      get RGBELoader() {\n        return RGBELoader;\n      },\n      get GLTFLoader() {\n        return GLTFLoader;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","THREE","OrbitControls","gsap","dat","RGBELoader","GLTFLoader","sceneDiv","gui","GUI","scene","Scene","camera","PerspectiveCamera","window","innerHeight","position","set","add","axesHelper","AxesHelper","plane","Mesh","PlaneBufferGeometry","MeshStandardMaterial","receiveShadow","renderer","WebGLRenderer","setSize","innerWidth","shadowMap","enabled","addEventListener","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","value","appendChild","domElement"],"sources":["E:/three.js/three.js-demo/three-city/city/src/components/Scene.vue"],"sourcesContent":["<template>\r\n  <div class=\"scene\" ref=\"sceneDiv\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport {onMounted,ref} from 'vue';\r\nimport * as THREE from \"three\";\r\n\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport gsap from \"gsap\";\r\nimport * as dat from \"dat.gui\";\r\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader.js\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\n//场景元素div\r\nlet sceneDiv=ref(null);\r\n\r\n//创建gui对象\r\nconst gui = new dat.GUI();\r\n\r\n// console.log(THREE);\r\n// 初始化场景\r\nconst scene = new THREE.Scene();\r\n\r\n// 创建透视相机\r\nconst camera = new THREE.PerspectiveCamera(\r\n  75,\r\n  window.innerHeight / window.innerHeight,\r\n  1,\r\n  50\r\n);\r\n// 设置相机位置\r\n// object3d具有position，属性是1个3维的向量\r\ncamera.position.set(0, 0, 10);\r\nscene.add(camera);\r\n\r\n// 加入辅助轴，帮助我们查看3维坐标轴\r\nconst axesHelper = new THREE.AxesHelper(5);\r\nscene.add(axesHelper);\r\n\r\nconst plane = new THREE.Mesh(\r\n  new THREE.PlaneBufferGeometry(20, 20),\r\n  new THREE.MeshStandardMaterial()\r\n);\r\nplane.position.set(0, 0, -6);\r\nplane.receiveShadow = true;\r\nscene.add(plane);\r\n\r\n// 初始化渲染器\r\nconst renderer = new THREE.WebGLRenderer();\r\n// 设置渲染尺寸大小\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\nrenderer.shadowMap.enabled = true;\r\n\r\n// 监听屏幕大小改变的变化，设置渲染的尺寸\r\nwindow.addEventListener(\"resize\", () => {\r\n  //   console.log(\"resize\");\r\n  // 更新摄像头\r\n  camera.aspect = window.innerWidth / window.innerHeight;\r\n  //   更新摄像机的投影矩阵\r\n  camera.updateProjectionMatrix();\r\n\r\n  //   更新渲染器\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n  //   设置渲染器的像素比例\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n});\r\nonMounted(()=>{\r\n  sceneDiv.value.appendChild(renderer.domElement)\r\n})\r\n</script>\r\n\r\n<style >\r\n.scene{\r\n  width: 100vw;\r\n  height: 100vw;\r\n  position:absolute;\r\n  z-index: 100;\r\n  left: 0;\r\n  top:0;\r\n}\r\n\r\n</style>"],"mappings":"AAKA,SAAQA,SAAS,EAACC,GAAG,QAAO,KAAK;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,aAAa,QAAQ,2CAA2C;AACzE,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAO,KAAKC,GAAG,MAAM,SAAS;AAC9B,SAASC,UAAU,QAAQ,0CAA0C;AACrE,SAASC,UAAU,QAAQ,uCAAuC;;AAElE;;;;;;;;IACA,IAAIC,QAAQ,GAACP,GAAG,CAAC,IAAI,CAAC;;IAEtB;IACA,MAAMQ,GAAG,GAAG,IAAIJ,GAAG,CAACK,GAAG,CAAC,CAAC;;IAEzB;IACA;IACA,MAAMC,KAAK,GAAG,IAAIT,KAAK,CAACU,KAAK,CAAC,CAAC;;IAE/B;IACA,MAAMC,MAAM,GAAG,IAAIX,KAAK,CAACY,iBAAiB,CACxC,EAAE,EACFC,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACC,WAAW,EACvC,CAAC,EACD,EACF,CAAC;IACD;IACA;IACAH,MAAM,CAACI,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IAC7BP,KAAK,CAACQ,GAAG,CAACN,MAAM,CAAC;;IAEjB;IACA,MAAMO,UAAU,GAAG,IAAIlB,KAAK,CAACmB,UAAU,CAAC,CAAC,CAAC;IAC1CV,KAAK,CAACQ,GAAG,CAACC,UAAU,CAAC;IAErB,MAAME,KAAK,GAAG,IAAIpB,KAAK,CAACqB,IAAI,CAC1B,IAAIrB,KAAK,CAACsB,mBAAmB,CAAC,EAAE,EAAE,EAAE,CAAC,EACrC,IAAItB,KAAK,CAACuB,oBAAoB,CAAC,CACjC,CAAC;IACDH,KAAK,CAACL,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5BI,KAAK,CAACI,aAAa,GAAG,IAAI;IAC1Bf,KAAK,CAACQ,GAAG,CAACG,KAAK,CAAC;;IAEhB;IACA,MAAMK,QAAQ,GAAG,IAAIzB,KAAK,CAAC0B,aAAa,CAAC,CAAC;IAC1C;IACAD,QAAQ,CAACE,OAAO,CAACd,MAAM,CAACe,UAAU,EAAEf,MAAM,CAACC,WAAW,CAAC;IACvDW,QAAQ,CAACI,SAAS,CAACC,OAAO,GAAG,IAAI;;IAEjC;IACAjB,MAAM,CAACkB,gBAAgB,CAAC,QAAQ,EAAE,MAAM;MACtC;MACA;MACApB,MAAM,CAACqB,MAAM,GAAGnB,MAAM,CAACe,UAAU,GAAGf,MAAM,CAACC,WAAW;MACtD;MACAH,MAAM,CAACsB,sBAAsB,CAAC,CAAC;;MAE/B;MACAR,QAAQ,CAACE,OAAO,CAACd,MAAM,CAACe,UAAU,EAAEf,MAAM,CAACC,WAAW,CAAC;MACvD;MACAW,QAAQ,CAACS,aAAa,CAACrB,MAAM,CAACsB,gBAAgB,CAAC;IACjD,CAAC,CAAC;IACFrC,SAAS,CAAC,MAAI;MACZQ,QAAQ,CAAC8B,KAAK,CAACC,WAAW,CAACZ,QAAQ,CAACa,UAAU,CAAC;IACjD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}