{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as THREE from \"three\";\nimport camera from \"../camera\";\nexport default class AlarmSprite {\n  constructor() {\n    const TextureLoader = new THREE.TextureLoader();\n    const map = TextureLoader.load(\"./textures/tag/fire.png\");\n    this.material = new THREE.SpriteMaterial({\n      map: map\n    });\n    this.mesh = new THREE.Sprite(this.material);\n    this.mesh.position.set(-4.2, 2.5, 4);\n\n    //封装点击事件，经过投射光线检测获取点击对象\n    this.fns = [];\n    //创建射线\n\n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    window.addEventListener('click', event => {\n      this.mouse.x = event.clientX / window.innerWidth * 2 - 1;\n      this.mouse.y = -(event.clientY / window.innerHeight * 2 - 1);\n      this.raycaster.setFromCamera(this.mouse, camera);\n      //event.mesh = this.mesh;\n      //event.alarm=this;\n      const intersects = this.raycaster.intersectObject(this.mesh);\n      if (intersects.length > 0) {\n        this.fns.forEach(fn => {\n          fn(event);\n        });\n      }\n    });\n  }\n  onClick(fn) {\n    this.fns.push(fn);\n  }\n}","map":{"version":3,"names":["THREE","camera","AlarmSprite","constructor","TextureLoader","map","load","material","SpriteMaterial","mesh","Sprite","position","set","fns","raycaster","Raycaster","mouse","Vector2","window","addEventListener","event","x","clientX","innerWidth","y","clientY","innerHeight","setFromCamera","intersects","intersectObject","length","forEach","fn","onClick","push"],"sources":["E:/three.js/three.js-demo/three-city/city/src/three/mesh/AlarmSprite.js"],"sourcesContent":["import * as THREE from \"three\"; \r\nimport camera from \"../camera\";\r\nexport default class AlarmSprite{\r\n  constructor(){\r\n    const TextureLoader = new THREE.TextureLoader();\r\n    const map = TextureLoader.load( \"./textures/tag/fire.png\" );\r\n    this.material = new THREE.SpriteMaterial( { map: map } );\r\n\r\n    this.mesh = new THREE.Sprite( this.material );\r\n   \r\n    this.mesh.position.set(-4.2,2.5,4);\r\n\r\n    //封装点击事件，经过投射光线检测获取点击对象\r\n    this.fns=[];\r\n    //创建射线\r\n    \r\n    this.raycaster = new THREE.Raycaster();\r\n    this.mouse = new THREE.Vector2();\r\n    window.addEventListener('click',(event)=>{\r\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n      this.mouse.y = -((event.clientY / window.innerHeight) * 2 - 1);\r\n     \r\n      this.raycaster.setFromCamera(this.mouse, camera);\r\n      //event.mesh = this.mesh;\r\n      //event.alarm=this;\r\n      const intersects = this.raycaster.intersectObject(  this.mesh  );\r\n      if(intersects.length>0){\r\n      this.fns.forEach((fn)=>{\r\n        fn(event);\r\n      });\r\n    }\r\n})\r\n  }\r\n  onClick(fn){\r\n    this.fns.push(fn);\r\n\r\n  }\r\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,WAAW;AAC9B,eAAe,MAAMC,WAAW;EAC9BC,WAAWA,CAAA,EAAE;IACX,MAAMC,aAAa,GAAG,IAAIJ,KAAK,CAACI,aAAa,CAAC,CAAC;IAC/C,MAAMC,GAAG,GAAGD,aAAa,CAACE,IAAI,CAAE,yBAA0B,CAAC;IAC3D,IAAI,CAACC,QAAQ,GAAG,IAAIP,KAAK,CAACQ,cAAc,CAAE;MAAEH,GAAG,EAAEA;IAAI,CAAE,CAAC;IAExD,IAAI,CAACI,IAAI,GAAG,IAAIT,KAAK,CAACU,MAAM,CAAE,IAAI,CAACH,QAAS,CAAC;IAE7C,IAAI,CAACE,IAAI,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,CAAC,CAAC;;IAElC;IACA,IAAI,CAACC,GAAG,GAAC,EAAE;IACX;;IAEA,IAAI,CAACC,SAAS,GAAG,IAAId,KAAK,CAACe,SAAS,CAAC,CAAC;IACtC,IAAI,CAACC,KAAK,GAAG,IAAIhB,KAAK,CAACiB,OAAO,CAAC,CAAC;IAChCC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEC,KAAK,IAAG;MACvC,IAAI,CAACJ,KAAK,CAACK,CAAC,GAAID,KAAK,CAACE,OAAO,GAAGJ,MAAM,CAACK,UAAU,GAAI,CAAC,GAAG,CAAC;MAC1D,IAAI,CAACP,KAAK,CAACQ,CAAC,GAAG,EAAGJ,KAAK,CAACK,OAAO,GAAGP,MAAM,CAACQ,WAAW,GAAI,CAAC,GAAG,CAAC,CAAC;MAE9D,IAAI,CAACZ,SAAS,CAACa,aAAa,CAAC,IAAI,CAACX,KAAK,EAAEf,MAAM,CAAC;MAChD;MACA;MACA,MAAM2B,UAAU,GAAG,IAAI,CAACd,SAAS,CAACe,eAAe,CAAG,IAAI,CAACpB,IAAM,CAAC;MAChE,IAAGmB,UAAU,CAACE,MAAM,GAAC,CAAC,EAAC;QACvB,IAAI,CAACjB,GAAG,CAACkB,OAAO,CAAEC,EAAE,IAAG;UACrBA,EAAE,CAACZ,KAAK,CAAC;QACX,CAAC,CAAC;MACJ;IACJ,CAAC,CAAC;EACA;EACAa,OAAOA,CAACD,EAAE,EAAC;IACT,IAAI,CAACnB,GAAG,CAACqB,IAAI,CAACF,EAAE,CAAC;EAEnB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}