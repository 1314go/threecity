{"ast":null,"code":"import * as THREE from \"three\";\nexport default function modifyCityMaterial(mesh) {\n  mesh.geometry.computeBoundingBox();\n  //   console.log(mesh.geometry.boundingBox);\n\n  let {\n    min,\n    max\n  } = mesh.geometry.boundingBox;\n  //   获取物体的高度差\n  let uHeight = max.y - min.y;\n  mesh.material.onBeforeCompile = shader => {\n    //console.log(shader.vertexShader);\n    //console.log(shader.fragmentShader);\n    shader.uniforms.uTopColor = {\n      value: new THREE.Color(\"#ffffff\")\n    };\n    shader.uniforms.uHeight = {\n      value: uHeight\n    };\n    shader.vertexShader = shader.vertexShader.replace(\"#include <common>\", `\n        #include <common>\n        varying vec3 vPosition;\n        `);\n    shader.vertexShader = shader.vertexShader.replace(\"#include <begin_vertex>\", `\n        #include <begin_vertex>\n        vPosition = position;\n    `);\n    shader.fragmentShader = shader.fragmentShader.replace(\"#include <common>\", `\n        #include <common>\n        \n        uniform vec3 uTopColor;\n        uniform float uHeight;\n        varying vec3 vPosition;\n  \n          `);\n    shader.fragmentShader = shader.fragmentShader.replace(\"//#end#\", `\n        \n        vec4 distGradColor = gl_FragColor;\n  \n        // 设置混合的百分比\n        float gradMix = (vPosition.y+uHeight/2.0)/uHeight;\n        // 计算出混合颜色\n        vec3 gradMixColor = mix(distGradColor.xyz,uTopColor,gradMix);\n        gl_FragColor = vec4(gradMixColor,1);\n          //#end#\n  \n        `);\n  };\n}","map":{"version":3,"names":["THREE","modifyCityMaterial","mesh","geometry","computeBoundingBox","min","max","boundingBox","uHeight","y","material","onBeforeCompile","shader","uniforms","uTopColor","value","Color","vertexShader","replace","fragmentShader"],"sources":["E:/three.js/three.js-demo/three-city/city/src/three/modify/modifyCityMaterial.js"],"sourcesContent":["\r\nimport * as THREE from \"three\";\r\n\r\nexport default function modifyCityMaterial( mesh){\r\n\r\n  mesh.geometry.computeBoundingBox();\r\n  //   console.log(mesh.geometry.boundingBox);\r\n\r\n  let { min, max } = mesh.geometry.boundingBox;\r\n  //   获取物体的高度差\r\n  let uHeight = max.y - min.y;\r\n\r\n\r\n\r\n  mesh.material.onBeforeCompile = (shader) =>{\r\n    //console.log(shader.vertexShader);\r\n    //console.log(shader.fragmentShader);\r\n    shader.uniforms.uTopColor = {\r\n      value: new THREE.Color(\"#ffffff\"),\r\n    };\r\n\r\n    shader.uniforms.uHeight = {\r\n      value: uHeight,\r\n    };\r\n    shader.vertexShader = shader.vertexShader.replace(\r\n      \"#include <common>\",\r\n      `\r\n        #include <common>\r\n        varying vec3 vPosition;\r\n        `\r\n    );\r\n  \r\n    shader.vertexShader = shader.vertexShader.replace(\r\n      \"#include <begin_vertex>\",\r\n      `\r\n        #include <begin_vertex>\r\n        vPosition = position;\r\n    `\r\n    );\r\n  \r\n    shader.fragmentShader = shader.fragmentShader.replace(\r\n      \"#include <common>\",\r\n      `\r\n        #include <common>\r\n        \r\n        uniform vec3 uTopColor;\r\n        uniform float uHeight;\r\n        varying vec3 vPosition;\r\n  \r\n          `\r\n    );\r\n    shader.fragmentShader = shader.fragmentShader.replace(\r\n      \"//#end#\",\r\n      `\r\n        \r\n        vec4 distGradColor = gl_FragColor;\r\n  \r\n        // 设置混合的百分比\r\n        float gradMix = (vPosition.y+uHeight/2.0)/uHeight;\r\n        // 计算出混合颜色\r\n        vec3 gradMixColor = mix(distGradColor.xyz,uTopColor,gradMix);\r\n        gl_FragColor = vec4(gradMixColor,1);\r\n          //#end#\r\n  \r\n        `\r\n    );\r\n}}"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,eAAe,SAASC,kBAAkBA,CAAEC,IAAI,EAAC;EAE/CA,IAAI,CAACC,QAAQ,CAACC,kBAAkB,CAAC,CAAC;EAClC;;EAEA,IAAI;IAAEC,GAAG;IAAEC;EAAI,CAAC,GAAGJ,IAAI,CAACC,QAAQ,CAACI,WAAW;EAC5C;EACA,IAAIC,OAAO,GAAGF,GAAG,CAACG,CAAC,GAAGJ,GAAG,CAACI,CAAC;EAI3BP,IAAI,CAACQ,QAAQ,CAACC,eAAe,GAAIC,MAAM,IAAI;IACzC;IACA;IACAA,MAAM,CAACC,QAAQ,CAACC,SAAS,GAAG;MAC1BC,KAAK,EAAE,IAAIf,KAAK,CAACgB,KAAK,CAAC,SAAS;IAClC,CAAC;IAEDJ,MAAM,CAACC,QAAQ,CAACL,OAAO,GAAG;MACxBO,KAAK,EAAEP;IACT,CAAC;IACDI,MAAM,CAACK,YAAY,GAAGL,MAAM,CAACK,YAAY,CAACC,OAAO,CAC/C,mBAAmB,EACnB;AACN;AACA;AACA,SACI,CAAC;IAEDN,MAAM,CAACK,YAAY,GAAGL,MAAM,CAACK,YAAY,CAACC,OAAO,CAC/C,yBAAyB,EACzB;AACN;AACA;AACA,KACI,CAAC;IAEDN,MAAM,CAACO,cAAc,GAAGP,MAAM,CAACO,cAAc,CAACD,OAAO,CACnD,mBAAmB,EACnB;AACN;AACA;AACA;AACA;AACA;AACA;AACA,WACI,CAAC;IACDN,MAAM,CAACO,cAAc,GAAGP,MAAM,CAACO,cAAc,CAACD,OAAO,CACnD,SAAS,EACT;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACI,CAAC;EACL,CAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}