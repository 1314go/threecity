{"ast":null,"code":"import { getSmartCityInfo } from '@/api/api';\nimport BigScreen from '@/components/BigScreen.vue';\nimport Scene from '@/components/Scene.vue';\nimport { onMounted } from 'vue';\nimport gsap from 'gsap';\nimport { reactive } from 'vue';\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // @ is an alias to /src\n    const dataInfo = reactive({\n      iot: 0,\n      event: 0,\n      power: 0,\n      test: 0\n    });\n    onMounted(async () => {\n      changeInfo();\n    });\n    const changeInfo = async () => {\n      let res = await getSmartCityInfo();\n      // dataInfo.iot = res.data.data.iot; \n      // dataInfo.event = res.data.data.event;\n      // dataInfo.power = res.data.data.power;\n      // dataInfo.test = res.data.data.test;\n      gsap.to(dataInfo.iot, {\n        iot: res.data.data.iot,\n        event: res.data.data.event,\n        power: res.data.data.power,\n        test: res.data.data.test,\n        duration: 1,\n        ease: \"none\",\n        repeat: -1,\n        yoyo: true\n      });\n    };\n    const __returned__ = {\n      dataInfo,\n      changeInfo,\n      get getSmartCityInfo() {\n        return getSmartCityInfo;\n      },\n      BigScreen,\n      Scene,\n      onMounted,\n      get gsap() {\n        return gsap;\n      },\n      reactive\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["getSmartCityInfo","BigScreen","Scene","onMounted","gsap","reactive","dataInfo","iot","event","power","test","changeInfo","res","to","data","duration","ease","repeat","yoyo"],"sources":["E:/three.js/three.js-demo/three-city/city/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n <Scene></Scene>\n <BigScreen :dataInfo=\"dataInfo\"></BigScreen>\n  </div>\n</template>\n\n<script setup>\n// @ is an alias to /src\nimport { getSmartCityInfo } from '@/api/api';\nimport BigScreen from '@/components/BigScreen.vue';\nimport Scene from '@/components/Scene.vue'\nimport { onMounted } from 'vue';\nimport gsap from 'gsap';\nimport { reactive } from 'vue';\nconst dataInfo = reactive({\n    iot:0,\n    event:0,\n    power:0,\n    test:0,\n\n});\nonMounted(async ()=>{\n  changeInfo();\n});\nconst changeInfo=async ()=>{\n  let res = await getSmartCityInfo();\n  // dataInfo.iot = res.data.data.iot; \n  // dataInfo.event = res.data.data.event;\n  // dataInfo.power = res.data.data.power;\n  // dataInfo.test = res.data.data.test;\n  gsap.to(dataInfo.iot,{\n    iot:res.data.data.iot,\n    event:res.data.data.event,\n    power:res.data.data.power,\n    test:res.data.data.test,\n    duration:1,\n    ease:\"none\",\n    repeat:-1,\n    yoyo:true\n  });\n\n};\n</script>\n"],"mappings":"AASA,SAASA,gBAAgB,QAAQ,WAAW;AAC5C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,SAASC,SAAS,QAAQ,KAAK;AAC/B,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,QAAQ,QAAQ,KAAK;;;;;;;;IAN9B;IAOA,MAAMC,QAAQ,GAAGD,QAAQ,CAAC;MACtBE,GAAG,EAAC,CAAC;MACLC,KAAK,EAAC,CAAC;MACPC,KAAK,EAAC,CAAC;MACPC,IAAI,EAAC;IAET,CAAC,CAAC;IACFP,SAAS,CAAC,YAAU;MAClBQ,UAAU,CAAC,CAAC;IACd,CAAC,CAAC;IACF,MAAMA,UAAU,GAAC,MAAAA,CAAA,KAAU;MACzB,IAAIC,GAAG,GAAG,MAAMZ,gBAAgB,CAAC,CAAC;MAClC;MACA;MACA;MACA;MACAI,IAAI,CAACS,EAAE,CAACP,QAAQ,CAACC,GAAG,EAAC;QACnBA,GAAG,EAACK,GAAG,CAACE,IAAI,CAACA,IAAI,CAACP,GAAG;QACrBC,KAAK,EAACI,GAAG,CAACE,IAAI,CAACA,IAAI,CAACN,KAAK;QACzBC,KAAK,EAACG,GAAG,CAACE,IAAI,CAACA,IAAI,CAACL,KAAK;QACzBC,IAAI,EAACE,GAAG,CAACE,IAAI,CAACA,IAAI,CAACJ,IAAI;QACvBK,QAAQ,EAAC,CAAC;QACVC,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,CAAC,CAAC;QACTC,IAAI,EAAC;MACP,CAAC,CAAC;IAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}