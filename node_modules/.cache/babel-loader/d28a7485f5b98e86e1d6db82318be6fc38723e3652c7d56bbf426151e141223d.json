{"ast":null,"code":"import * as THREE from \"three\";\nimport gsap from \"gsap\";\nimport { Water } from \"three/examples/jsm/objects/Water.js\";\nexport default class Ocean {\n  constructor(radius = 50) {\n    this.clock = new THREE.Clock(); // 创建一个计时器\n    // 创建水平\n    const TextureLoader = new THREE.TextureLoader();\n    this.waterGeometry = new THREE.CircleGeometry(radius, 32);\n    this.water = new Water(this.waterGeometry, {\n      textureWidth: 512,\n      textureHeight: 512,\n      waterNormals: new THREE.TextureLoader().load('./textures/waternormals.jpg', function (texture) {\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n      }),\n      alpha: 1.0,\n      color: 0x001e0f,\n      //flowDirection: new THREE.Vector2(1, 1),\n      //scale: 100,\n      distortionScale: 3.7\n    });\n    this.water.position.y = 0;\n    this.water.rotation.x = -Math.PI / 2;\n    this.mesh = this.water;\n    this.water.renderOrder = -1;\n  }\n  update(timeDelta) {\n    // 更新水的流动方向\n    const time = this.clock.getElapsedTime();\n    this.water.material.uniforms.time.value = time;\n  }\n}\nfunction animate() {\n  requestAnimationFrame(animate);\n\n  // 获取时间差\n  const timeDelta = clock.getDelta();\n\n  // 更新水的流动方向\n  ocean.update(timeDelta);\n\n  // 渲染场景\n  renderer.render(scene, camera);\n}","map":{"version":3,"names":["THREE","gsap","Water","Ocean","constructor","radius","clock","Clock","TextureLoader","waterGeometry","CircleGeometry","water","textureWidth","textureHeight","waterNormals","load","texture","wrapS","wrapT","RepeatWrapping","alpha","color","distortionScale","position","y","rotation","x","Math","PI","mesh","renderOrder","update","timeDelta","time","getElapsedTime","material","uniforms","value","animate","requestAnimationFrame","getDelta","ocean","renderer","render","scene","camera"],"sources":["E:/three.js/three.js-demo/three-city/city/src/three/mesh/Ocean.js"],"sourcesContent":["import * as THREE from \"three\";\r\nimport gsap from \"gsap\";\r\nimport { Water } from \"three/examples/jsm/objects/Water.js\";\r\n\r\nexport default class Ocean {\r\n  constructor(radius = 50) {\r\n    this.clock = new THREE.Clock(); // 创建一个计时器\r\n    // 创建水平\r\n    const TextureLoader = new THREE.TextureLoader();\r\n    this.waterGeometry = new THREE.CircleGeometry(radius, 32);\r\n    this.water = new Water(this.waterGeometry, {\r\n      textureWidth: 512,\r\n      textureHeight: 512,\r\n      waterNormals: new THREE.TextureLoader().load( './textures/waternormals.jpg', function ( texture ) {\r\n\r\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\r\n\r\n      } ),\r\n      alpha: 1.0,\r\n\r\n      color: 0x001e0f,\r\n      //flowDirection: new THREE.Vector2(1, 1),\r\n      //scale: 100,\r\n      distortionScale: 3.7,\r\n    });\r\n    this.water.position.y = 0;\r\n    this.water.rotation.x = -Math.PI / 2;\r\n    this.mesh = this.water;\r\n    this.water.renderOrder = -1;\r\n\r\n  \r\n  }\r\n  update(timeDelta) {\r\n    // 更新水的流动方向\r\n    const time = this.clock.getElapsedTime();\r\n    this.water.material.uniforms.time.value = time;\r\n  }\r\n  \r\n}\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n\r\n  // 获取时间差\r\n  const timeDelta = clock.getDelta();\r\n\r\n  // 更新水的流动方向\r\n  ocean.update(timeDelta);\r\n\r\n  // 渲染场景\r\n  renderer.render(scene, camera);\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,KAAK,QAAQ,qCAAqC;AAE3D,eAAe,MAAMC,KAAK,CAAC;EACzBC,WAAWA,CAACC,MAAM,GAAG,EAAE,EAAE;IACvB,IAAI,CAACC,KAAK,GAAG,IAAIN,KAAK,CAACO,KAAK,CAAC,CAAC,CAAC,CAAC;IAChC;IACA,MAAMC,aAAa,GAAG,IAAIR,KAAK,CAACQ,aAAa,CAAC,CAAC;IAC/C,IAAI,CAACC,aAAa,GAAG,IAAIT,KAAK,CAACU,cAAc,CAACL,MAAM,EAAE,EAAE,CAAC;IACzD,IAAI,CAACM,KAAK,GAAG,IAAIT,KAAK,CAAC,IAAI,CAACO,aAAa,EAAE;MACzCG,YAAY,EAAE,GAAG;MACjBC,aAAa,EAAE,GAAG;MAClBC,YAAY,EAAE,IAAId,KAAK,CAACQ,aAAa,CAAC,CAAC,CAACO,IAAI,CAAE,6BAA6B,EAAE,UAAWC,OAAO,EAAG;QAEhGA,OAAO,CAACC,KAAK,GAAGD,OAAO,CAACE,KAAK,GAAGlB,KAAK,CAACmB,cAAc;MAEtD,CAAE,CAAC;MACHC,KAAK,EAAE,GAAG;MAEVC,KAAK,EAAE,QAAQ;MACf;MACA;MACAC,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,IAAI,CAACX,KAAK,CAACY,QAAQ,CAACC,CAAC,GAAG,CAAC;IACzB,IAAI,CAACb,KAAK,CAACc,QAAQ,CAACC,CAAC,GAAG,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC;IACpC,IAAI,CAACC,IAAI,GAAG,IAAI,CAAClB,KAAK;IACtB,IAAI,CAACA,KAAK,CAACmB,WAAW,GAAG,CAAC,CAAC;EAG7B;EACAC,MAAMA,CAACC,SAAS,EAAE;IAChB;IACA,MAAMC,IAAI,GAAG,IAAI,CAAC3B,KAAK,CAAC4B,cAAc,CAAC,CAAC;IACxC,IAAI,CAACvB,KAAK,CAACwB,QAAQ,CAACC,QAAQ,CAACH,IAAI,CAACI,KAAK,GAAGJ,IAAI;EAChD;AAEF;AACA,SAASK,OAAOA,CAAA,EAAG;EACjBC,qBAAqB,CAACD,OAAO,CAAC;;EAE9B;EACA,MAAMN,SAAS,GAAG1B,KAAK,CAACkC,QAAQ,CAAC,CAAC;;EAElC;EACAC,KAAK,CAACV,MAAM,CAACC,SAAS,CAAC;;EAEvB;EACAU,QAAQ,CAACC,MAAM,CAACC,KAAK,EAAEC,MAAM,CAAC;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}