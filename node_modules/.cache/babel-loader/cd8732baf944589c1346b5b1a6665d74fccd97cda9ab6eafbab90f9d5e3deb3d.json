{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as THREE from \"three\";\nexport default class AlarmSprite {\n  constructor() {\n    const TextureLoader = new THREE.TextureLoader();\n    const map = TextureLoader.load(\"./textures/tag/fire.png\");\n    this.material = new THREE.SpriteMaterial({\n      map: map\n    });\n    this.mesh = new THREE.Sprite(this.material);\n    this.mesh.position.set(-4.2, 2.5, 4);\n\n    //封装点击事件，经过投射光线检测获取点击对象\n    this.fns = [];\n    //创建射线\n\n    window.addEventListener('click', event => {\n      this.mouse.x = event.clientX / window.innerWidth * 2 - 1;\n      this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n      this.raycaster = new THREE.Raycaster();\n      this.mouse = new THREE.Vector2();\n      this.raycaster.setFromCamera(this.mouse, camera);\n      event.mesh = this.mesh;\n      event.alarm = this;\n      this.fns.forEach(fn => {\n        fn(event);\n      });\n    });\n  }\n  onClick(fn) {\n    this.fns.push(fn);\n  }\n}","map":{"version":3,"names":["THREE","AlarmSprite","constructor","TextureLoader","map","load","material","SpriteMaterial","mesh","Sprite","position","set","fns","window","addEventListener","event","mouse","x","clientX","innerWidth","y","clientY","innerHeight","raycaster","Raycaster","Vector2","setFromCamera","camera","alarm","forEach","fn","onClick","push"],"sources":["E:/three.js/three.js-demo/three-city/city/src/three/mesh/AlarmSprite.js"],"sourcesContent":["import * as THREE from \"three\"; \r\nexport default class AlarmSprite{\r\n  constructor(){\r\n    const TextureLoader = new THREE.TextureLoader();\r\n    const map = TextureLoader.load( \"./textures/tag/fire.png\" );\r\n    this.material = new THREE.SpriteMaterial( { map: map } );\r\n\r\n    this.mesh = new THREE.Sprite( this.material );\r\n   \r\n    this.mesh.position.set(-4.2,2.5,4);\r\n\r\n    //封装点击事件，经过投射光线检测获取点击对象\r\n    this.fns=[];\r\n    //创建射线\r\n    \r\n\r\n    window.addEventListener('click',(event)=>{\r\n      this.mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\r\n      this.mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\r\n      this.raycaster = new THREE.Raycaster();\r\n      this.mouse = new THREE.Vector2();\r\n      this.raycaster.setFromCamera(this.mouse, camera);\r\n      event.mesh = this.mesh;\r\n      event.alarm=this;\r\n      this.fns.forEach((fn)=>{\r\n        fn(event);\r\n      })\r\n})\r\n  }\r\n  onClick(fn){\r\n    this.fns.push(fn);\r\n\r\n  }\r\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,eAAe,MAAMC,WAAW;EAC9BC,WAAWA,CAAA,EAAE;IACX,MAAMC,aAAa,GAAG,IAAIH,KAAK,CAACG,aAAa,CAAC,CAAC;IAC/C,MAAMC,GAAG,GAAGD,aAAa,CAACE,IAAI,CAAE,yBAA0B,CAAC;IAC3D,IAAI,CAACC,QAAQ,GAAG,IAAIN,KAAK,CAACO,cAAc,CAAE;MAAEH,GAAG,EAAEA;IAAI,CAAE,CAAC;IAExD,IAAI,CAACI,IAAI,GAAG,IAAIR,KAAK,CAACS,MAAM,CAAE,IAAI,CAACH,QAAS,CAAC;IAE7C,IAAI,CAACE,IAAI,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,CAAC,CAAC;;IAElC;IACA,IAAI,CAACC,GAAG,GAAC,EAAE;IACX;;IAGAC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEC,KAAK,IAAG;MACvC,IAAI,CAACC,KAAK,CAACC,CAAC,GAAKF,KAAK,CAACG,OAAO,GAAGL,MAAM,CAACM,UAAU,GAAK,CAAC,GAAG,CAAC;MAC5D,IAAI,CAACH,KAAK,CAACI,CAAC,GAAG,EAAIL,KAAK,CAACM,OAAO,GAAGR,MAAM,CAACS,WAAW,CAAE,GAAG,CAAC,GAAG,CAAC;MAC/D,IAAI,CAACC,SAAS,GAAG,IAAIvB,KAAK,CAACwB,SAAS,CAAC,CAAC;MACtC,IAAI,CAACR,KAAK,GAAG,IAAIhB,KAAK,CAACyB,OAAO,CAAC,CAAC;MAChC,IAAI,CAACF,SAAS,CAACG,aAAa,CAAC,IAAI,CAACV,KAAK,EAAEW,MAAM,CAAC;MAChDZ,KAAK,CAACP,IAAI,GAAG,IAAI,CAACA,IAAI;MACtBO,KAAK,CAACa,KAAK,GAAC,IAAI;MAChB,IAAI,CAAChB,GAAG,CAACiB,OAAO,CAAEC,EAAE,IAAG;QACrBA,EAAE,CAACf,KAAK,CAAC;MACX,CAAC,CAAC;IACR,CAAC,CAAC;EACA;EACAgB,OAAOA,CAACD,EAAE,EAAC;IACT,IAAI,CAAClB,GAAG,CAACoB,IAAI,CAACF,EAAE,CAAC;EAEnB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}