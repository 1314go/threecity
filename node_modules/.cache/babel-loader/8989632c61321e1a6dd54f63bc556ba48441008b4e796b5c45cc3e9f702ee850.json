{"ast":null,"code":"import { getSmartCityInfo, getSmartCityList } from \"@/api/api\";\nimport BigScreen from '@/components/BigScreen.vue';\nimport Scene from '@/components/Scene.vue';\nimport gsap from 'gsap';\nimport { onMounted, reactive, ref } from \"vue\";\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // @ is an alias to /src\n    const dataInfo = reactive({\n      iot: {\n        number: 0\n      },\n      event: {\n        number: 0\n      },\n      power: {\n        number: 0\n      },\n      test: {\n        number: 0\n      }\n    });\n    onMounted(async () => {\n      changeInfo();\n      getEventList();\n      setInterval(() => {\n        changeInfo();\n      }, 5000);\n    });\n    const changeInfo = async () => {\n      let res = await getSmartCityInfo();\n      // dataInfo.iot = res.data.data.iot; \n      // dataInfo.event = res.data.data.event;\n      // dataInfo.power = res.data.data.power;\n      // dataInfo.test = res.data.data.test;\n      // dataInfo.iot={name:res.data.data.iot.name,unit:res.data.data.iot.unit};\n      // gsap.to(dataInfo.iot,{\n      //   number:res.data.data.iot.number,\n      //   duration:1,\n      // });\n      // gsap.to(dataInfo.event,{\n      //   number:res.data.data.event.number,\n      //   duration:1,\n      // });\n      // gsap.to(dataInfo.power,{\n      //   number:res.data.data.power.number,\n      //   duration:1,\n      // });\n      // gsap.to(dataInfo.test,{\n      //   number:res.data.data.test.number,\n      //   duration:1,\n      // });\n      for (let key in dataInfo) {\n        dataInfo[key].name = res.data.data[key].name;\n        dataInfo[key].unit = res.data.data[key].unit;\n        gsap.to(dataInfo[key], {\n          number: res.data.data[key].number,\n          duration: 1\n        });\n      }\n    };\n    const eventList = ref([]);\n    const getEventList = () => {\n      let result = getSmartCityList();\n      console.log(result);\n    };\n    const __returned__ = {\n      dataInfo,\n      changeInfo,\n      eventList,\n      getEventList,\n      get getSmartCityInfo() {\n        return getSmartCityInfo;\n      },\n      get getSmartCityList() {\n        return getSmartCityList;\n      },\n      BigScreen,\n      Scene,\n      get gsap() {\n        return gsap;\n      },\n      onMounted,\n      reactive,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["getSmartCityInfo","getSmartCityList","BigScreen","Scene","gsap","onMounted","reactive","ref","dataInfo","iot","number","event","power","test","changeInfo","getEventList","setInterval","res","key","name","data","unit","to","duration","eventList","result","console","log"],"sources":["E:/three.js/three.js-demo/three-city/city/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n <Scene></Scene>\n <BigScreen :dataInfo=\"dataInfo\"></BigScreen>\n  </div>\n</template>\n\n<script setup>\n// @ is an alias to /src\nimport { getSmartCityInfo, getSmartCityList } from \"@/api/api\";\nimport BigScreen from '@/components/BigScreen.vue';\nimport Scene from '@/components/Scene.vue'\n\nimport gsap from 'gsap';\n\nimport { onMounted, reactive, ref } from \"vue\";\nconst dataInfo = reactive({\n    iot:{number:0},\n    event:{number:0},\n    power:{number:0},\n    test:{number:0},\n\n});\nonMounted(async ()=>{\n  changeInfo();\n  getEventList();\n  setInterval(()=>{\n    changeInfo();\n    \n  },5000);\n});\nconst changeInfo=async ()=>{\n  let res = await getSmartCityInfo();\n  // dataInfo.iot = res.data.data.iot; \n  // dataInfo.event = res.data.data.event;\n  // dataInfo.power = res.data.data.power;\n  // dataInfo.test = res.data.data.test;\n  // dataInfo.iot={name:res.data.data.iot.name,unit:res.data.data.iot.unit};\n  // gsap.to(dataInfo.iot,{\n  //   number:res.data.data.iot.number,\n  //   duration:1,\n  // });\n  // gsap.to(dataInfo.event,{\n  //   number:res.data.data.event.number,\n  //   duration:1,\n  // });\n  // gsap.to(dataInfo.power,{\n  //   number:res.data.data.power.number,\n  //   duration:1,\n  // });\n  // gsap.to(dataInfo.test,{\n  //   number:res.data.data.test.number,\n  //   duration:1,\n  // });\n  for (let key in dataInfo) {\n    dataInfo[key].name = res.data.data[key].name;\n    dataInfo[key].unit = res.data.data[key].unit;\n    gsap.to(dataInfo[key], {\n      number: res.data.data[key].number,\n      duration: 1,\n\n      \n    });\n  }\n};\nconst eventList =ref([]);\nconst getEventList = ()=>{\n  let result = getSmartCityList();\n  console.log(result);\n}\n</script>\n"],"mappings":"AASA,SAASA,gBAAgB,EAAEC,gBAAgB,QAAQ,WAAW;AAC9D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,KAAK,MAAM,wBAAwB;AAE1C,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,SAAS,EAAEC,QAAQ,EAAEC,GAAG,QAAQ,KAAK;;;;;;;;IAP9C;IAQA,MAAMC,QAAQ,GAAGF,QAAQ,CAAC;MACtBG,GAAG,EAAC;QAACC,MAAM,EAAC;MAAC,CAAC;MACdC,KAAK,EAAC;QAACD,MAAM,EAAC;MAAC,CAAC;MAChBE,KAAK,EAAC;QAACF,MAAM,EAAC;MAAC,CAAC;MAChBG,IAAI,EAAC;QAACH,MAAM,EAAC;MAAC;IAElB,CAAC,CAAC;IACFL,SAAS,CAAC,YAAU;MAClBS,UAAU,CAAC,CAAC;MACZC,YAAY,CAAC,CAAC;MACdC,WAAW,CAAC,MAAI;QACdF,UAAU,CAAC,CAAC;MAEd,CAAC,EAAC,IAAI,CAAC;IACT,CAAC,CAAC;IACF,MAAMA,UAAU,GAAC,MAAAA,CAAA,KAAU;MACzB,IAAIG,GAAG,GAAG,MAAMjB,gBAAgB,CAAC,CAAC;MAClC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAK,IAAIkB,GAAG,IAAIV,QAAQ,EAAE;QACxBA,QAAQ,CAACU,GAAG,CAAC,CAACC,IAAI,GAAGF,GAAG,CAACG,IAAI,CAACA,IAAI,CAACF,GAAG,CAAC,CAACC,IAAI;QAC5CX,QAAQ,CAACU,GAAG,CAAC,CAACG,IAAI,GAAGJ,GAAG,CAACG,IAAI,CAACA,IAAI,CAACF,GAAG,CAAC,CAACG,IAAI;QAC5CjB,IAAI,CAACkB,EAAE,CAACd,QAAQ,CAACU,GAAG,CAAC,EAAE;UACrBR,MAAM,EAAEO,GAAG,CAACG,IAAI,CAACA,IAAI,CAACF,GAAG,CAAC,CAACR,MAAM;UACjCa,QAAQ,EAAE;QAGZ,CAAC,CAAC;MACJ;IACF,CAAC;IACD,MAAMC,SAAS,GAAEjB,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMQ,YAAY,GAAGA,CAAA,KAAI;MACvB,IAAIU,MAAM,GAAGxB,gBAAgB,CAAC,CAAC;MAC/ByB,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}