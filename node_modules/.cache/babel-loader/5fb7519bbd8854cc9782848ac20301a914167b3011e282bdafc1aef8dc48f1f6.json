{"ast":null,"code":"import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport * as THREE from \"three\";\nimport scene from \"../scene\";\nimport modifyCityMaterial from \"../modify/modifyCityMaterial\";\nimport FlyLine from \"./FlyLine\";\nimport FlyLineShader from \"./FlyLineShader\";\nimport MeshLine from \"./MeshLine\";\nimport LightWall from \"./LightWall\";\nimport LightRadar from \"./LightRadar\";\nimport AlarmSprite from \"./AlarmSprite\";\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader\";\nimport { Clouds, CloudsPlus } from \"./Clouds\";\nimport Ocean from \"./Ocean\";\nexport default function createCity() {\n  const gltfLoader = new GLTFLoader();\n  const dracoLoader = new DRACOLoader();\n  dracoLoader.setDecoderPath(\"./draco/\");\n  dracoLoader.setDecoderConfig({\n    type: \"js\"\n  });\n  dracoLoader.preload();\n  gltfLoader.setDRACOLoader(dracoLoader);\n  gltfLoader.load(\"./model/city.glb\", gltf => {\n    console.log(gltf);\n    gltf.scene.traverse(item => {\n      console.log(item);\n      if (item.type === \"Mesh\") {\n        const cityMaterial = new THREE.MeshBasicMaterial({\n          color: new THREE.Color(0x00FFFF)\n        });\n        item.material = cityMaterial;\n        modifyCityMaterial(item);\n        if (item.name == \"Layerbuildings\") {\n          const meshLine = new MeshLine(item.geometry);\n          const size = item.scale.x;\n          meshLine.mesh.scale.set(size, size, size);\n          scene.add(meshLine.mesh);\n        }\n      }\n    });\n    scene.add(gltf.scene);\n\n    // const flyLine = new FlyLine();\n    // scene.add(flyLine.mesh);\n    const addClouds = new Clouds();\n    scene.add(addClouds.mesh);\n    const addCloudsPlus = new CloudsPlus();\n    scene.add(addCloudsPlus.mesh);\n    const ocean = new Ocean();\n    // scene.add(ocean.mesh);\n    // 添加着色器飞线\n    const flyLineShader = new FlyLineShader();\n    scene.add(flyLineShader.mesh);\n\n    // //添加光墙\n    // const lightWall = new LightWall();\n    // scene.add(lightWall.mesh);\n    //添加雷达\n    const lightRadar = new LightRadar();\n    scene.add(lightRadar.mesh);\n    //添加警示标识\n    // const alarmSprite = new AlarmSprite();\n    // scene.add(alarmSprite.mesh);\n    // alarmSprite.onClick(function (e){\n    //   console.log(\"警告\",e);\n    // });\n  });\n}","map":{"version":3,"names":["GLTFLoader","THREE","scene","modifyCityMaterial","FlyLine","FlyLineShader","MeshLine","LightWall","LightRadar","AlarmSprite","DRACOLoader","Clouds","CloudsPlus","Ocean","createCity","gltfLoader","dracoLoader","setDecoderPath","setDecoderConfig","type","preload","setDRACOLoader","load","gltf","console","log","traverse","item","cityMaterial","MeshBasicMaterial","color","Color","material","name","meshLine","geometry","size","scale","x","mesh","set","add","addClouds","addCloudsPlus","ocean","flyLineShader","lightRadar"],"sources":["E:/three.js/three.js-demo/three-city/city/src/three/mesh/City.js"],"sourcesContent":["import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from \"three\";\r\nimport scene from \"../scene\";\r\nimport modifyCityMaterial from \"../modify/modifyCityMaterial\";\r\nimport FlyLine from \"./FlyLine\";\r\nimport FlyLineShader from \"./FlyLineShader\";\r\nimport MeshLine from \"./MeshLine\";\r\nimport LightWall from \"./LightWall\";\r\nimport LightRadar from \"./LightRadar\";\r\nimport AlarmSprite from \"./AlarmSprite\";\r\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader\";\r\nimport { Clouds, CloudsPlus } from \"./Clouds\";\r\nimport Ocean from \"./Ocean\";\r\nexport default function createCity() {\r\n  const gltfLoader = new GLTFLoader();\r\n  const dracoLoader = new DRACOLoader();\r\n    dracoLoader.setDecoderPath(\"./draco/\");\r\n    dracoLoader.setDecoderConfig({ type: \"js\" });\r\n    dracoLoader.preload();\r\n    gltfLoader.setDRACOLoader(dracoLoader);\r\n  gltfLoader.load(\"./model/city.glb\",  (gltf)=> {\r\n    console.log(gltf);\r\n\r\n       gltf.scene.traverse((item)=>{\r\n      console.log(item);\r\n      if(item.type === \"Mesh\"){\r\n        const cityMaterial = new THREE.MeshBasicMaterial({\r\n          color: new THREE.Color(0x00FFFF),\r\n        });\r\n        item.material = cityMaterial;\r\n        modifyCityMaterial(item);\r\n        if(item.name == \"Layerbuildings\"){\r\n          const meshLine = new MeshLine(item.geometry);\r\n          const size = item.scale.x;\r\n          meshLine.mesh.scale.set(size,size,size);\r\n          scene.add(meshLine.mesh);\r\n        }\r\n      }\r\n\r\n    }\r\n   );\r\n      scene.add(gltf.scene);\r\n     \r\n\r\n   \r\n      // const flyLine = new FlyLine();\r\n      // scene.add(flyLine.mesh);\r\n      const addClouds = new Clouds();\r\n      scene.add(addClouds.mesh);\r\n      const addCloudsPlus = new CloudsPlus();\r\n      scene.add(addCloudsPlus.mesh);\r\n\r\n      const ocean = new Ocean();\r\n     // scene.add(ocean.mesh);\r\n    // 添加着色器飞线\r\n      const flyLineShader = new FlyLineShader();\r\n      scene.add(flyLineShader.mesh);\r\n  \r\n      // //添加光墙\r\n      // const lightWall = new LightWall();\r\n      // scene.add(lightWall.mesh);\r\n      //添加雷达\r\n      const lightRadar = new LightRadar();\r\n      scene.add(lightRadar.mesh);\r\n      //添加警示标识\r\n      // const alarmSprite = new AlarmSprite();\r\n      // scene.add(alarmSprite.mesh);\r\n      // alarmSprite.onClick(function (e){\r\n      //   console.log(\"警告\",e);\r\n      // });\r\n  });\r\n\r\n}\r\n  \r\n    "],"mappings":"AAAA,SAASA,UAAU,QAAQ,uCAAuC;AAClE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,kBAAkB,MAAM,8BAA8B;AAC7D,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,WAAW,QAAQ,wCAAwC;AACpE,SAASC,MAAM,EAAEC,UAAU,QAAQ,UAAU;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAC3B,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,MAAMC,UAAU,GAAG,IAAIf,UAAU,CAAC,CAAC;EACnC,MAAMgB,WAAW,GAAG,IAAIN,WAAW,CAAC,CAAC;EACnCM,WAAW,CAACC,cAAc,CAAC,UAAU,CAAC;EACtCD,WAAW,CAACE,gBAAgB,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,CAAC;EAC5CH,WAAW,CAACI,OAAO,CAAC,CAAC;EACrBL,UAAU,CAACM,cAAc,CAACL,WAAW,CAAC;EACxCD,UAAU,CAACO,IAAI,CAAC,kBAAkB,EAAIC,IAAI,IAAI;IAC5CC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAEdA,IAAI,CAACrB,KAAK,CAACwB,QAAQ,CAAEC,IAAI,IAAG;MAC7BH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;MACjB,IAAGA,IAAI,CAACR,IAAI,KAAK,MAAM,EAAC;QACtB,MAAMS,YAAY,GAAG,IAAI3B,KAAK,CAAC4B,iBAAiB,CAAC;UAC/CC,KAAK,EAAE,IAAI7B,KAAK,CAAC8B,KAAK,CAAC,QAAQ;QACjC,CAAC,CAAC;QACFJ,IAAI,CAACK,QAAQ,GAAGJ,YAAY;QAC5BzB,kBAAkB,CAACwB,IAAI,CAAC;QACxB,IAAGA,IAAI,CAACM,IAAI,IAAI,gBAAgB,EAAC;UAC/B,MAAMC,QAAQ,GAAG,IAAI5B,QAAQ,CAACqB,IAAI,CAACQ,QAAQ,CAAC;UAC5C,MAAMC,IAAI,GAAGT,IAAI,CAACU,KAAK,CAACC,CAAC;UACzBJ,QAAQ,CAACK,IAAI,CAACF,KAAK,CAACG,GAAG,CAACJ,IAAI,EAACA,IAAI,EAACA,IAAI,CAAC;UACvClC,KAAK,CAACuC,GAAG,CAACP,QAAQ,CAACK,IAAI,CAAC;QAC1B;MACF;IAEF,CACD,CAAC;IACErC,KAAK,CAACuC,GAAG,CAAClB,IAAI,CAACrB,KAAK,CAAC;;IAIrB;IACA;IACA,MAAMwC,SAAS,GAAG,IAAI/B,MAAM,CAAC,CAAC;IAC9BT,KAAK,CAACuC,GAAG,CAACC,SAAS,CAACH,IAAI,CAAC;IACzB,MAAMI,aAAa,GAAG,IAAI/B,UAAU,CAAC,CAAC;IACtCV,KAAK,CAACuC,GAAG,CAACE,aAAa,CAACJ,IAAI,CAAC;IAE7B,MAAMK,KAAK,GAAG,IAAI/B,KAAK,CAAC,CAAC;IAC1B;IACD;IACE,MAAMgC,aAAa,GAAG,IAAIxC,aAAa,CAAC,CAAC;IACzCH,KAAK,CAACuC,GAAG,CAACI,aAAa,CAACN,IAAI,CAAC;;IAE7B;IACA;IACA;IACA;IACA,MAAMO,UAAU,GAAG,IAAItC,UAAU,CAAC,CAAC;IACnCN,KAAK,CAACuC,GAAG,CAACK,UAAU,CAACP,IAAI,CAAC;IAC1B;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC,CAAC;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}