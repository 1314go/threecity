{"ast":null,"code":"import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport * as THREE from \"three\";\nimport scene from \"../scene\";\nimport modifyCityMaterial from \"../modify/modifyCityMaterial\";\nconst light = new THREE.AmbientLight(0xffffff, 0.5);\nscene.add(light);\nconst dotLight = new THREE.DirectionalLight(0x0c0e33, 0.5);\ndotLight.position.set(5, 60, 7.5);\nscene.add(dotLight);\nexport default function createCity() {\n  const gltfLoader = new GLTFLoader();\n  gltfLoader.load(\"./model/city.glb\", gltf => {\n    console.log(gltf);\n    gltf.scene.traverse(item => {\n      console.log(item);\n      if (item.type === \"Mesh\") {\n        const cityMaterial = new THREE.MeshBasicMaterial({\n          color: new THREE.Color(0xffffff)\n        });\n        item.material = cityMaterial;\n        modifyCityMaterial(item);\n      }\n    });\n    scene.add(gltf.scene);\n  });\n}","map":{"version":3,"names":["GLTFLoader","THREE","scene","modifyCityMaterial","light","AmbientLight","add","dotLight","DirectionalLight","position","set","createCity","gltfLoader","load","gltf","console","log","traverse","item","type","cityMaterial","MeshBasicMaterial","color","Color","material"],"sources":["E:/three.js/three.js-demo/three-city/city/src/three/mesh/City.js"],"sourcesContent":["import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from \"three\";\r\nimport scene from \"../scene\";\r\nimport modifyCityMaterial from \"../modify/modifyCityMaterial\";\r\n\r\n\r\nconst light = new THREE.AmbientLight(0xffffff, 0.5);\r\nscene.add(light);\r\nconst dotLight = new THREE.DirectionalLight(0x0c0e33, 0.5);\r\ndotLight.position.set(5, 60, 7.5);\r\nscene.add(dotLight);\r\nexport default function createCity() {\r\n  const gltfLoader = new GLTFLoader();\r\n  gltfLoader.load(\"./model/city.glb\",  (gltf)=> {\r\n    console.log(gltf);\r\n\r\n    gltf.scene.traverse((item)=>{\r\n      console.log(item);\r\n      if(item.type === \"Mesh\"){\r\n        const cityMaterial = new THREE.MeshBasicMaterial({\r\n          color: new THREE.Color(0xffffff),\r\n        });\r\n        item.material = cityMaterial;\r\n        modifyCityMaterial(item);\r\n      }\r\n\r\n    });\r\n    scene.add(gltf.scene);\r\n  });\r\n\r\n}"],"mappings":"AAAA,SAASA,UAAU,QAAQ,uCAAuC;AAClE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,kBAAkB,MAAM,8BAA8B;AAG7D,MAAMC,KAAK,GAAG,IAAIH,KAAK,CAACI,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC;AACnDH,KAAK,CAACI,GAAG,CAACF,KAAK,CAAC;AAChB,MAAMG,QAAQ,GAAG,IAAIN,KAAK,CAACO,gBAAgB,CAAC,QAAQ,EAAE,GAAG,CAAC;AAC1DD,QAAQ,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC;AACjCR,KAAK,CAACI,GAAG,CAACC,QAAQ,CAAC;AACnB,eAAe,SAASI,UAAUA,CAAA,EAAG;EACnC,MAAMC,UAAU,GAAG,IAAIZ,UAAU,CAAC,CAAC;EACnCY,UAAU,CAACC,IAAI,CAAC,kBAAkB,EAAIC,IAAI,IAAI;IAC5CC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAEjBA,IAAI,CAACZ,KAAK,CAACe,QAAQ,CAAEC,IAAI,IAAG;MAC1BH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;MACjB,IAAGA,IAAI,CAACC,IAAI,KAAK,MAAM,EAAC;QACtB,MAAMC,YAAY,GAAG,IAAInB,KAAK,CAACoB,iBAAiB,CAAC;UAC/CC,KAAK,EAAE,IAAIrB,KAAK,CAACsB,KAAK,CAAC,QAAQ;QACjC,CAAC,CAAC;QACFL,IAAI,CAACM,QAAQ,GAAGJ,YAAY;QAC5BjB,kBAAkB,CAACe,IAAI,CAAC;MAC1B;IAEF,CAAC,CAAC;IACFhB,KAAK,CAACI,GAAG,CAACQ,IAAI,CAACZ,KAAK,CAAC;EACvB,CAAC,CAAC;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}