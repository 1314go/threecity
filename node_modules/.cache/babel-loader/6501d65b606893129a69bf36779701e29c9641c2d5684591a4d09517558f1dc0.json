{"ast":null,"code":"import * as THREE from \"three\";\nimport gsap from \"gsap\";\nimport { Water } from \"three/examples/jsm/objects/Water.js\";\nexport default class Ocean {\n  constructor(radius = 50) {\n    // 创建水平\n    const TextureLoader = new THREE.TextureLoader();\n    this.waterGeometry = new THREE.CircleGeometry(radius, 32);\n    this.water = new Water(this.waterGeometry, {\n      textureWidth: 512,\n      textureHeight: 512,\n      waterNormals: new THREE.TextureLoader().load('./textures/waternormals.jpg', function (texture) {\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n      }),\n      alpha: 1.0,\n      color: 0x001e0f,\n      //flowDirection: new THREE.Vector2(1, 1),\n      //scale: 100,\n      distortionScale: 3.7\n    });\n    this.water.position.y = 0;\n    this.water.rotation.x = -Math.PI / 2;\n    this.mesh = this.water;\n    this.water.renderOrder = -1;\n  }\n}","map":{"version":3,"names":["THREE","gsap","Water","Ocean","constructor","radius","TextureLoader","waterGeometry","CircleGeometry","water","textureWidth","textureHeight","waterNormals","load","texture","wrapS","wrapT","RepeatWrapping","alpha","color","distortionScale","position","y","rotation","x","Math","PI","mesh","renderOrder"],"sources":["E:/three.js/three.js-demo/three-city/city/src/three/mesh/Ocean.js"],"sourcesContent":["import * as THREE from \"three\";\r\nimport gsap from \"gsap\";\r\nimport { Water } from \"three/examples/jsm/objects/Water.js\";\r\n\r\nexport default class Ocean {\r\n  constructor(radius = 50) {\r\n    // 创建水平\r\n    const TextureLoader = new THREE.TextureLoader();\r\n    this.waterGeometry = new THREE.CircleGeometry(radius, 32);\r\n    this.water = new Water(this.waterGeometry, {\r\n      textureWidth: 512,\r\n      textureHeight: 512,\r\n      waterNormals: new THREE.TextureLoader().load( './textures/waternormals.jpg', function ( texture ) {\r\n\r\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\r\n\r\n      } ),\r\n      alpha: 1.0,\r\n\r\n      color: 0x001e0f,\r\n      //flowDirection: new THREE.Vector2(1, 1),\r\n      //scale: 100,\r\n      distortionScale: 3.7,\r\n    });\r\n    this.water.position.y = 0;\r\n    this.water.rotation.x = -Math.PI / 2;\r\n    this.mesh = this.water;\r\n    this.water.renderOrder = -1;\r\n\r\n  \r\n  }\r\n  \r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,KAAK,QAAQ,qCAAqC;AAE3D,eAAe,MAAMC,KAAK,CAAC;EACzBC,WAAWA,CAACC,MAAM,GAAG,EAAE,EAAE;IACvB;IACA,MAAMC,aAAa,GAAG,IAAIN,KAAK,CAACM,aAAa,CAAC,CAAC;IAC/C,IAAI,CAACC,aAAa,GAAG,IAAIP,KAAK,CAACQ,cAAc,CAACH,MAAM,EAAE,EAAE,CAAC;IACzD,IAAI,CAACI,KAAK,GAAG,IAAIP,KAAK,CAAC,IAAI,CAACK,aAAa,EAAE;MACzCG,YAAY,EAAE,GAAG;MACjBC,aAAa,EAAE,GAAG;MAClBC,YAAY,EAAE,IAAIZ,KAAK,CAACM,aAAa,CAAC,CAAC,CAACO,IAAI,CAAE,6BAA6B,EAAE,UAAWC,OAAO,EAAG;QAEhGA,OAAO,CAACC,KAAK,GAAGD,OAAO,CAACE,KAAK,GAAGhB,KAAK,CAACiB,cAAc;MAEtD,CAAE,CAAC;MACHC,KAAK,EAAE,GAAG;MAEVC,KAAK,EAAE,QAAQ;MACf;MACA;MACAC,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,IAAI,CAACX,KAAK,CAACY,QAAQ,CAACC,CAAC,GAAG,CAAC;IACzB,IAAI,CAACb,KAAK,CAACc,QAAQ,CAACC,CAAC,GAAG,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC;IACpC,IAAI,CAACC,IAAI,GAAG,IAAI,CAAClB,KAAK;IACtB,IAAI,CAACA,KAAK,CAACmB,WAAW,GAAG,CAAC,CAAC;EAG7B;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}